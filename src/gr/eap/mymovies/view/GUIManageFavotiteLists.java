/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gr.eap.mymovies.view;

/**
 *
 * @author g_kak
 */
public class GUIManageFavotiteLists extends javax.swing.JFrame {

    /**
     * Creates new form GUIManageFavotiteLists
     */
    public GUIManageFavotiteLists() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form. WARNING: Do NOT modify this code.
     * The content of this method is always regenerated by the
     * Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        myMoviesPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("myMoviesPU").createEntityManager();
        movieQuery = java.beans.Beans.isDesignTime() ? null : myMoviesPUEntityManager.createQuery("SELECT m FROM Movie m");
        movieList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : movieQuery.getResultList();
        favoriteListQuery = java.beans.Beans.isDesignTime() ? null : myMoviesPUEntityManager.createQuery("SELECT f FROM FavoriteList f");
        favoriteListList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : favoriteListQuery.getResultList();
        favoriteListQuery1 = java.beans.Beans.isDesignTime() ? null : myMoviesPUEntityManager.createQuery("SELECT f FROM FavoriteList f");
        favoriteListList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : favoriteListQuery1.getResultList();
        movieQuery1 = java.beans.Beans.isDesignTime() ? null : myMoviesPUEntityManager.createQuery("SELECT m FROM Movie m");
        movieList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : movieQuery1.getResultList();
        movieQuery2 = java.beans.Beans.isDesignTime() ? null : myMoviesPUEntityManager.createQuery("SELECT m FROM Movie m");
        movieList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : movieQuery2.getResultList();
        movieQuery3 = java.beans.Beans.isDesignTime() ? null : myMoviesPUEntityManager.createQuery("SELECT m FROM Movie m");
        movieList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : movieQuery3.getResultList();
        movieQuery4 = java.beans.Beans.isDesignTime() ? null : myMoviesPUEntityManager.createQuery("SELECT m FROM Movie m");
        movieList4 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : movieQuery4.getResultList();
        favoriteListQuery2 = java.beans.Beans.isDesignTime() ? null : myMoviesPUEntityManager.createQuery("SELECT f FROM FavoriteList f");
        favoriteListList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : favoriteListQuery2.getResultList();
        movieQuery5 = java.beans.Beans.isDesignTime() ? null : myMoviesPUEntityManager.createQuery("SELECT m FROM Movie m");
        movieList5 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : movieQuery5.getResultList();
        genreQuery = java.beans.Beans.isDesignTime() ? null : myMoviesPUEntityManager.createQuery("SELECT g FROM Genre g");
        genreList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : genreQuery.getResultList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        searchMovies = new javax.swing.JButton();
        searchMovies1 = new javax.swing.JButton();
        searchMovies2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1050, 389));

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, movieList5, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${title}"));
        columnBinding.setColumnName("Title");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${rating}"));
        columnBinding.setColumnName("Rating");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${overview}"));
        columnBinding.setColumnName("Overview");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        jScrollPane2.setViewportView(jTable1);

        jList1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jList1.setToolTipText("favoriteList");

        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, favoriteListList, jList1);
        jListBinding.setDetailBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        bindingGroup.addBinding(jListBinding);

        jScrollPane1.setViewportView(jList1);

        searchMovies.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gr/eap/mymovies/view/new.png"))); // NOI18N
        searchMovies.setText("<html><center>Δημιουργία<br/>Λίστας</center></html>");
        searchMovies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMoviespersistGenres(evt);
            }
        });

        searchMovies1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gr/eap/mymovies/view/delete.png"))); // NOI18N
        searchMovies1.setText("<html><center>Διαγραφή<br/>Λίστας</center></html>");
        searchMovies1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMovies1persistGenres(evt);
            }
        });

        searchMovies2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gr/eap/mymovies/view/edit.png"))); // NOI18N
        searchMovies2.setText("<html><center>Επεξεργασία<br/>Λίστας</center></html>");
        searchMovies2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMovies2persistGenres(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${name}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, genreList, eLProperty, jComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchMovies1)
                            .addComponent(searchMovies2, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                            .addComponent(searchMovies)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(331, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchMovies, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchMovies2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchMovies1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(133, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchMoviespersistGenres(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMoviespersistGenres
        //controllerGenre.insertDataFromJson();
    }//GEN-LAST:event_searchMoviespersistGenres

    private void searchMovies1persistGenres(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMovies1persistGenres
        // TODO add your handling code here:
    }//GEN-LAST:event_searchMovies1persistGenres

    private void searchMovies2persistGenres(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMovies2persistGenres
        // TODO add your handling code here:
    }//GEN-LAST:event_searchMovies2persistGenres

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GUIManageFavotiteLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GUIManageFavotiteLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GUIManageFavotiteLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GUIManageFavotiteLists.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GUIManageFavotiteLists().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.util.List<gr.eap.mymovies.model.FavoriteList> favoriteListList;
    private java.util.List<gr.eap.mymovies.model.FavoriteList> favoriteListList1;
    private java.util.List<gr.eap.mymovies.model.FavoriteList> favoriteListList2;
    private javax.persistence.Query favoriteListQuery;
    private javax.persistence.Query favoriteListQuery1;
    private javax.persistence.Query favoriteListQuery2;
    private java.util.List<gr.eap.mymovies.model.Genre> genreList;
    private javax.persistence.Query genreQuery;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private java.util.List<gr.eap.mymovies.model.Movie> movieList;
    private java.util.List<gr.eap.mymovies.model.Movie> movieList1;
    private java.util.List<gr.eap.mymovies.model.Movie> movieList2;
    private java.util.List<gr.eap.mymovies.model.Movie> movieList3;
    private java.util.List<gr.eap.mymovies.model.Movie> movieList4;
    private java.util.List<gr.eap.mymovies.model.Movie> movieList5;
    private javax.persistence.Query movieQuery;
    private javax.persistence.Query movieQuery1;
    private javax.persistence.Query movieQuery2;
    private javax.persistence.Query movieQuery3;
    private javax.persistence.Query movieQuery4;
    private javax.persistence.Query movieQuery5;
    private javax.persistence.EntityManager myMoviesPUEntityManager;
    private javax.swing.JButton searchMovies;
    private javax.swing.JButton searchMovies1;
    private javax.swing.JButton searchMovies2;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
